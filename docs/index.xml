<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>claven&#39;s blog</title>
    <link>https://z24z.com/</link>
    <description>Recent content on claven&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 11 Mar 2021 16:01:23 +0800</lastBuildDate>
    
        <atom:link href="https://z24z.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>美国名校的残酷真相</title>
      <link>https://z24z.com/post/chengzhanglizhi/</link>
      <pubDate>Thu, 11 Mar 2021 16:01:23 +0800</pubDate>
      
      <guid>https://z24z.com/post/chengzhanglizhi/</guid>
      
        <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;之前看到过的一则关于美国顶尖名校学生的新闻，虽然它是招生机构写的，有软文的嫌疑，但是里面传达的精神一直是我内心里面认可的价值观，所以自己码一遍记录一下，希望可以持续激励自己前进。&lt;/p&gt;
&lt;h2 id=&#34;内容&#34;&gt;内容&lt;/h2&gt;
&lt;p&gt;美国名校的教育质量很令人向往，但美国大学普遍是“严进严出”的政策，学业压力非常大。虽然顶着名校光环，但只有学生心里知道，&lt;!-- raw HTML omitted --&gt;要活着毕业有多难。&lt;!-- raw HTML omitted --&gt;有专门研究高校信息的结构整理分析了美国学校的学术严谨程度和学生工作量，盘点了学生最努力的十所大学，排名如下:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;排名&lt;/th&gt;
&lt;th&gt;学校&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;麻省理工(MIT)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;芝加哥大学(University of Chicago)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;莱斯大学(Rice University)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;卡内基梅隆大学(CMU)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;耶鲁大学(Yale University))&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;普林斯顿大学(Princeton University)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;鲍登学院(Bowdin College)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;哥伦比亚大学(Columbia University))&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在这些学校学习，你可能没有任何娱乐生活，只能牺牲睡眠，于是不知不觉就秃头了。&lt;/p&gt;
&lt;p&gt;下面，就为大家详细介绍&lt;!-- raw HTML omitted --&gt;在这些学校学习的“悲惨生活”。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;哥大：学累了，在哪都能睡&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在哥伦比亚大学，学生平均每个学期要上4-5节课，许多课程规定的阅读材料通常是每周50-100页，相当于每周要读250-500页，还不用算其他的作业和选读材料。&lt;!-- raw HTML omitted --&gt;而像文学、现代文明这样的课程，必读书目多达三十多本。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;因此哥大学生常常抱着厚厚的书本怀疑人生，下图来自ins账号sadcolumbiaboys。
&lt;img src=&#34;https://z24z.com/blog/2021/columbia_sleeping.png&#34; alt=&#34;sleeping&#34;&gt;&lt;/p&gt;
&lt;p&gt;因为学业压力大，睡眠不足.&lt;!-- raw HTML omitted --&gt;哥大学生练就了“在哪儿都能睡”的特殊技能。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;趴着能睡&lt;/strong&gt;
&lt;img src=&#34;https://z24z.com/blog/2021/sit_sleep.png&#34; alt=&#34;趴着睡&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;桌子上能睡&lt;/strong&gt;
&lt;img src=&#34;https://z24z.com/blog/2021/desk_sleep.png&#34; alt=&#34;桌上睡&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;树下也能睡&lt;/strong&gt;
&lt;img src=&#34;https://z24z.com/blog/2021/tree_sleep.png&#34; alt=&#34;树下睡&#34;&gt;&lt;/p&gt;
&lt;p&gt;真正诠释了什么叫做“只要足够累，哪儿都能睡”！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;耶鲁：努力高于一切&lt;/strong&gt;
大家常听的一句话是“work smarter, not harder”，但在耶鲁这边变成了&lt;!-- raw HTML omitted --&gt;“work harder, not smarter”。&lt;!-- raw HTML omitted --&gt;因为他们认为“work smarter”很可能变成抄捷径甚至作弊，会降低教育的价值。所以，在耶鲁大学，大家推崇的就是努力学习。&lt;/p&gt;
&lt;p&gt;据耶鲁本科学生说，刚来大学读书时，本来想兼顾学习、睡眠和娱乐，后来随着学习压力变大，生活重心就变成了学习和睡眠，&lt;!-- raw HTML omitted --&gt;最后就是以学习为主了。&lt;!-- raw HTML omitted --&gt;每天大概凌晨三点入睡，睡6个小时，又开始新的一天。&lt;/p&gt;
&lt;p&gt;可以说在耶鲁，作息时间是完全被打乱的，学到头秃也就并不奇怪了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CMU：只要活着，就还能学&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当其他大学校训是”真理与美德”的时候，卡耐基梅隆大学（CMU）校训是&lt;!-- raw HTML omitted --&gt;My heart is in the work。&lt;!-- raw HTML omitted --&gt;只要活着，只要还能呼吸，今天就要去学习、去革新、去改变社会。
&lt;img src=&#34;https://z24z.com/blog/2021/carnegie.jpeg&#34; alt=&#34;卡内基校训&#34;&gt;&lt;/p&gt;
&lt;p&gt;在CMU，你不想学习也不行。因为作为学霸聚集地的CMU，会让你感受到&lt;!-- raw HTML omitted --&gt;浓浓的同龄人压力。&lt;!-- raw HTML omitted --&gt;CMU的学生都是踏实、刻苦、喜爱钻研的人，处在这种人群中，也难免会受到影响拼命学习。&lt;/p&gt;
&lt;p&gt;据在读学生说，&lt;!-- raw HTML omitted --&gt;CMU的课业压力也很大，一个作业就得写10-20个小时。&lt;!-- raw HTML omitted --&gt;睡觉很奢侈，经常凌晨3、4点睡或熬夜到天亮。基本没有时间体验学习之外的东西。&lt;/p&gt;
&lt;p&gt;而且CMU是学费交完后，随便上课.&lt;!-- raw HTML omitted --&gt;为了将学费价值最大化就尽可能多的选课，很少不学习。&lt;!-- raw HTML omitted --&gt;
&lt;img src=&#34;https://z24z.com/blog/2021/learn.jpeg&#34; alt=&#34;只有学习&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MIT：书呆子的天堂&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你一定很奇怪，MIT的学生是有多努力，才在这份榜单中不仅排名第一，还拿到了满分？&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;MIT的学生经常被称为“nerd”（书呆子）。&lt;!-- raw HTML omitted --&gt;而MIT也被称为A Nerd’s Paradise（一个书呆子的天堂）。因为MIT的学生真的很喜欢学习，且有很浓厚的学习氛围，以至于：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;足球运动员比赛前，在公共汽车上也在学习.&lt;/li&gt;
&lt;li&gt;运动健将可能成为医生或物理学博士.&lt;/li&gt;
&lt;li&gt;在高中参加过几次聚会，可能会被视为“异类”.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;但有趣的是，在其他学校，nerd通常会被排挤和嘲笑；而在MIT，他们却为成为nerd而感到骄傲。&lt;/p&gt;
&lt;p&gt;在MIT nerd实在太普遍，以至于逐渐形成了“nerd pride”的文化，并衍生出了多个周边产品，包括T恤、帽子、笔袋、徽章和水杯等，强化了这样一种专属MIT的身份认同。
&lt;img src=&#34;https://z24z.com/blog/2021/nerd_pride_1.jpeg&#34; alt=&#34;nerd&#34;&gt;
&lt;img src=&#34;https://z24z.com/blog/2021/nerd_pride_2.jpeg&#34; alt=&#34;nerd&#34;&gt;&lt;/p&gt;
&lt;p&gt;MIT的学生认为，成为nerd，是因为他们对科学和技术达到了近乎着迷的程度，所以他们会在解决难题中找到乐趣，在假期仍旧专注于学术研究。&lt;!-- raw HTML omitted --&gt;Nerd的称呼，是对他们努力学习的证明，是他们的荣誉勋章。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;写在末尾&#34;&gt;写在末尾&lt;/h2&gt;
&lt;p&gt;虽然学业压力大，但付出和收获是成正比的。那些已经被认可的天才都如此努力了，你还有什么理由懈怠。不要老是拿天赋说事，以我们绝大部分人的努力程度来说，还远远不到拼天赋的程度。不要吝啬任何可以使用自己大脑的机会，相信用进废退。做一个不让自己后悔的人。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>用Git Pages加Hugo搭建个人博客全记录</title>
      <link>https://z24z.com/post/github-pages-for-blog/</link>
      <pubDate>Wed, 10 Mar 2021 16:01:23 +0800</pubDate>
      
      <guid>https://z24z.com/post/github-pages-for-blog/</guid>
      
        <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;在互联网大厂工作的第5个年头，危机该来还是要来了。因为公司业务调整，进了业务部门之后，发现外面似乎也那么风调雨顺。其实危机感一直有，但是人都是惰性的，认识到自己的不足，可是如果没有到致命的阶段，都是会保持无动于衷的。总有一些冠冕堂皇的理由来安慰自己，就这样在岁月蹉跎之下，没有成长，每次都在面临考验的时候反问自己，之前这么多的时间都干啥去了。博客是一个非常好的东西，可以不断记录自己的成长过程。以及关键时候，可以找到那些该死的，自己明明之前知道但是现在却怎么也记不起来的东西。好记性不如烂笔头是有科学依据的，人的大脑没有办法容纳那么多实时的/短期的和长期的记忆数据。有记录的东西，可以快速唤醒大脑内部沉睡的记忆。&lt;/p&gt;
&lt;p&gt;为了记录自己的东西，我开始调研各种博客平台，发现github可以直接托管博客，简直不要太爽。在其他平台直接写自己的博客确实可以省掉不少麻烦，不用自己折腾。但是，用git有好几个方面的优势：第一，不用额外开一个账号，各种平台的账号太麻烦了，能少一个是一个。第二，可以直接用代码来管理自己的网站，随意div，非常酷。第三，完全免费，不需要购买服务器，也不需要自己担心环境/系统维护和文件存储等一系列麻烦的事情。基于这些原因，于是我开始了使用git pages搭建个人博客之旅。网上教程也比较多，但是中间还是踩过一些坑，下面也来记录一下自己搭建的整个过程。&lt;/p&gt;
&lt;h2 id=&#34;如何使用github-pages&#34;&gt;如何使用GitHub Pages&lt;/h2&gt;
&lt;p&gt;首先，你得有一个github的账号，然后在个人主页创建一个新的repository.进入页面后，在repository name的位置填写域名，格式是username.gitHub.io.其中username就是你的github账号，这个地方必须是这样的格式，否则网站不会生效。&lt;/p&gt;
&lt;p&gt;创建成功之后，你可以在右上角的settings里面的github pages的选项，选择一个github官方提供的主题，选择好之后commit, github就会帮你生成网站，然后你在浏览器里面输入username.GitHub.io就可以看到效果了。当然，这个只是最简单的第一步，如果你想要做一个内容丰富的博客，我们接着往下看。&lt;/p&gt;
&lt;h2 id=&#34;配置自定义域名&#34;&gt;配置自定义域名&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;购买自己的域名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;github pages提供免费为自定义域名开启HTTPS的功能，并且大大简化了操作的流程，现在用户已经不需要自己提供证书，只需要将自己的域名使用CNAME的方式指向自己的github pages域名即可。这个地方很多教程都说的不清楚，直接跳过了需要自己购买域名的这一步，让人很是摸不着头脑，可能也跟我自己的经验有关系，因为之前没有买过，所以不太懂。可以去各种云服务提供商，比如腾讯/华为/阿里等，在他们的域名注册服务页面选择自己喜欢的域名，进行注册，以腾讯云为例：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;进入注册页面&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://z24z.com/blog/2021/tencent_dns.png&#34; alt=&#34;域名注册&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查询域名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://z24z.com/blog/2021/tencent_dns_1.png&#34; alt=&#34;域名注册&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里面包含了各种后缀的顶级域名的注册情况，你可以根据自己的情况来进行购买，一般购买.com和.net应该就差不多了。这个地方是真的头疼，很多域名都被抢注了，稍微有点含义的词几乎都没有了。当时，我光注册域名这一块就花了一天时间，汗。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;域名配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;域名买好之后，就可以开始配置域名转发到你自己的网站了。找到我的域名，在dns解析里添加一条解析记录，例如我选择添加子域名z24z.com通过CNAME的方式指向我刚刚自定义的git pages域名sz-zz24.gitHub.io（ping一下它对应的ip地址）。添加完成后等待dns解析的生效（dns的解析记录生效到全球可能需要几分钟时间）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://z24z.com/blog/2021/tencent_dns_2.png&#34; alt=&#34;域名注册&#34;&gt;&lt;/p&gt;
&lt;p&gt;经过上面的配置，之后重新回到最开始进入过的settings界面，找到github pages的设置，在custom domian里面填入我们刚刚建立的子域名，点击保存。保存后github需要一定的时间生成证书并确认域名的解析是否正常，我们只需要耐心等待即可，成功后显示结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://z24z.com/blog/2021/github_pages.png&#34; alt=&#34;github_pages&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后，你就可以在网站里面输入你的域名，然后看到网站的效果了。这样，网站代码托管就完成了。接下来，我们看下怎么样来构建个人的博客内容。&lt;/p&gt;
&lt;h2 id=&#34;构建网站&#34;&gt;构建网站&lt;/h2&gt;
&lt;p&gt;我们需要利用静态模板系统来让生产接管博客的文章的生成，然后才可以安静地专注博客的内容。这里面也有很多的选择，包括jekyll/hexo/hugo等等，最终选择了基于go实现的hugo，首先当然是因为hugo功能强大，不需要有额外的其他组件依赖。同时，还具备主题库丰富，更换简单，网站生成速度快等优势。话不多说，下面我们就来看一下怎么操作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;环境准备&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先，安装hugo：初步使用hugo的话，只需要跟随官网的文档过一遍quick start就可以了解基本的安装、使用方法了。这里根据我自己的经历也进行简单的说明。在mac系统，通过包管理工具homebrew可以非常简单的安装hugo。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;建立新站点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;接下来从终端进入到你想要放置博客站点内容的目录下面使用来建立站点。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo new site myblog
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;该命令会在当前目录下新建一个名为myblog的文件夹。你所有的站点文件都会在这个文件夹下面存放。常用目录用处如下&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;子目录名称&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;archetypes&lt;/td&gt;
&lt;td&gt;新文章默认模板&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;config.toml&lt;/td&gt;
&lt;td&gt;Hugo配置文档&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;content&lt;/td&gt;
&lt;td&gt;存放所有Markdown格式的文章&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;layouts&lt;/td&gt;
&lt;td&gt;存放自定义的view，可为空&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;static&lt;/td&gt;
&lt;td&gt;存放图像、CNAME、css、js等资源，发布后该目录下所有资源将处于网页根目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;themes&lt;/td&gt;
&lt;td&gt;存放下载的主题&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;使用下面的命令生成新的文章草稿：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo new posts/first-post.md
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在content目录中会自动以archetypes/default.md为模板在content/posts目录下生成一篇名为first-post.md的文章草稿。或者直接在content里面手动创建mardown文档或者其他类型的内容。在这里建议使用hugo的new命令创建，因为根据主题不同，使用new命令创建的文件会包含简单的模版框架。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
title: my-first-post
date: 2020-06-13T19:45:22+08:00
lastmod: 2020-06-13T19:45:22+08:00
author: Author
cover: /post/xxx-cover.jpg
categories: [&amp;quot;技术&amp;quot;]
tags: [&amp;quot;Hugo&amp;quot;, &amp;quot;GitHub&amp;quot;]
draft: true
---
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;使用主题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;站点生成之后，如果没有主题，就是空白的文档，这样肯定是不行的。与其他的站点工具不同，Hugo没有默认的主题，需要先添加一个主题才能新建文章。Hugo的官网上有很多的主题可选。选定一个喜欢的主题之后，需要将其下载到myblog文件夹中。在主题说明的页面中点击&amp;quot;download&amp;quot;的按钮，会进入到对应的GitHub页面中。有很多种方式可以将主题文件下载，并放置到myblog/themes/yourtheme文件夹中（yourtheme是主题的名称，可以在该主题的GitHub仓库的页面看到）。在这里为了使用git对站点进行管理，实现在不同的设备上方便的对站点进行维护，我们使用git的submodule功能。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd myblog
git init
git submodule add https://github.com/budparr/hugo-theme-11.git themes/yourtheme
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接下来，我们需要在配置文件中指名站点所使用的主题。打开config.toml直接编辑或者使用命令。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo &#39;theme = &amp;quot;yourtheme&amp;quot;&#39; &amp;gt;&amp;gt; config.toml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;配置文件中还有其他的可配置内容，这些我们后面再看。hugo的配置文件和文章中引用图片都是从static作为根目录的。写文章的时候可以直接从static目录引用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;开启hugo本地服务&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;所有的配置都在站点根目录下的cofing.toml文件下，其中baseURL的配置就是站点生成的网址。默认本地的1313端口。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;baseURL = &amp;quot;http://localhost:1313&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo server -D
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后打开网址，就可以看到渲染的内容。这个地方说明一下，在发布到环境的时候，把这个配置改成正式环境的地址，也就是上面买的域名地址。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配置文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;打开配置config.toml可以看到很多的参数可以配置，这里只描述最基本的内容，不同的主题可能会支持不同的参数配置，具体请看对应主题的说明文档。baseURL是站点的域名。title是站点的名称。theme是站点的主题。还有关于评论和打赏的相关配置，这些配置都可以参考官网主题的说明。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;发布&lt;/strong&gt;
每次发布的时候，都需要先执行hugo，把新写的文档按照主题进行渲染，所有生成的文件默认都在当前pulic的子目录下，可以在config里面配置到其他目录。然后把所有新的文件提交到github。提交代码之后，要等一段时间才生效。&lt;/p&gt;
&lt;h2 id=&#34;代码托管&#34;&gt;代码托管&lt;/h2&gt;
&lt;p&gt;目前github已经把之前的master分支改为main分支了，所以username.github.io的这个代码库，main分支我们就放一些项目介绍的东西就可以。使用master分支来管理网站托管的内容。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git init
git add .
git commit -m &amp;quot;first commit&amp;quot;
git remote add origin https://github.com/xxx/username.github.io.git
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;至此所有源文档就都push到github上了。然而此时github对待这些源文档跟其他任何普通的repository中的代码并没有任何不同，并不会将public子目录中的网页托管在github pages上。&lt;/p&gt;
&lt;p&gt;参考hugo官方文档，可以选择以下两种方式让github pages加载我们想要托管的/public子目录中的网页：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置Hugo将网页生成在名为/docs的子目录中，然后直接push到master branch&lt;/li&gt;
&lt;li&gt;仍然使用默认的/public子目录存储网页，再单独建立一个gh-pages branch&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一种方案的好处在于一次push即可将源文档和对应生成的网页文档都发布到github，操作非常简单。所需要的仅是在config.toml中添加如下一行配置，使得生成的网页默认保存在/docs子目录下。这种方式管理简单，一目了然，所以直接用了这种方式。如果需要用到第二种方式，可以查阅相关文献，此处不做记录。&lt;/p&gt;
&lt;p&gt;自此运行hugo命令后生成的网页文件将保存在/docs子目录下。将所有文档push到github的master branch，进入github对应repository的settings标签菜单，在github pages选项的source栏选择master branch /docs folder, 详情见前面域名配置的图。等待片刻即可访问域名看到之前用hugo生成的网页了。&lt;/p&gt;
&lt;p&gt;这里面还有一个坑，大部分的内容都可以通过配置来管理，但是有一个docs的东西，怎么也找不到，它的删除方法是：将doc菜单下的几个帖子对应的markdown文件打开，删除或者注释下面所示的代码设置。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;menu:
  main:
    parent: &amp;quot;docs&amp;quot;
    weight: 3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这也是一种加功能菜单的方法，需要的时候可以用起来。&lt;/p&gt;
&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;
&lt;p&gt;至此我的博客搭建记录就完成了，基本满足了我写文章的各项需求。也作为成长的一个新起点吧，什么事情都要从动起来开始，加油！&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>关于</title>
      <link>https://z24z.com/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>https://z24z.com/about/</guid>
      
        <description>&lt;p&gt;Hugo is a static site engine written in Go.&lt;/p&gt;
&lt;p&gt;It makes use of a variety of open source projects including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cobra&#34;&gt;Cobra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/viper&#34;&gt;Viper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/jWalterWeatherman&#34;&gt;J Walter Weatherman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cast&#34;&gt;Cast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn more and contribute on &lt;a href=&#34;https://github.com/gohugoio&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>
